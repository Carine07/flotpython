# -*- coding: utf-8 -*-
## FORMAT DU FICHIER
## Tout ce qui commence avec un ## est un commentaire
##
## le texte entre double crochets ouvrants et fermants
## est à afficher en surimpression pendant que je parle et à 
## synchroniser avec le texte entre crochet 

##  TITRE : Les décorateurs


## Résumé de la vidéo ()

Dans cette vidéo nous allons parler de la notion de décorateur.
Cette notion a été introduire initialement pous simplifier
la déclaration des méthodes statiques et de classes. Mais
les décorateur vont beaucoup plus loin en offrant un moyen
puissant d'ajouter une couche de logique à la demande aux
fonctions et aux classes. 

Mais revenons sur notre exemple de méthodes statiques et de classe. 

>>>>>>>>>> INCLUDE W7-S2-AV-slide1.pptx () <<<<<<<<<<


## Conclusion()

En résumé un décorateur est un moyen d'ajouter une couche de 
logique autour d'une fonction ou d'une classe à la demande. En effet, 
il suffit d'ajouter la ligne @decorateur avant la fonction ou la 
classe pour ajouter cette couche. 

Cette couche de logique peut-être simple, comme une fonction, ou très
sophistiquée, comme une classe. Le décorateur peut faire des opérations
et retourner la fonction ou la classe originale, ou retourner un 
autre objet callable,
c'est à dire soit une fonction, soit une classe qui implémente la
 méthode __call__. Les possibilités sont donc énorme. 
 Par exemple, un décorateur peut simplement valider des arguments 
 passés à une fonction ou profiler le temps d'exécution. Nous allons 
 voir dans les compléments des exemples concrets d'utilisation des 
 décorateurs.

