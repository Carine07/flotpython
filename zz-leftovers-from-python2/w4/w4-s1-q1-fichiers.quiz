# -*- coding: utf-8 -*-

<em><b>Rappel:</b>Les cases à cocher <b>rondes</b> appellent exactement une réponse valable, les cases <b>carrées</b> appellent zéro, une ou plusieurs réponses valables.</em>

<hr/>
Fichiers (1)
=====

Un objet de type fichier (<code>file</code>) est 

( ) une liste
( ) un tuple
(x) un itérateur

[explanation]
Un objet de type fichier est un itérateur. On peut directement faire une boucle <code>for</code> dessus, par contre on ne pourra itérer qu'une seule fois sur l'objet. 

[explanation]

<hr/>
Fichier (2)
=====

Que va faire le code suivant ?

<pre> f = open('base_bateaux.txt', 'r')</pre>

[ ] créer le fichier <code>base_bateaux.txt</code>
[x] ouvrir le fichier <code>base_bateaux.txt</code> s'il existe déjà et sinon produire une exception
[ ] ouvrir le fichier <code>base_bateaux.txt</code> s'il existe déjà et le créer sinon
[x] permettre de lire le fichier
[ ] permettre d'écrire dans le fichier

[explanation]
L'ouverture d'un fichier en mode <code>'r'</code> va ouvrir le fichier en lecture seul si le fichier existe et produire une exception s'il n'existe pas.
[explanation]

<hr/>
Fichier (3)
=====

Quel module de la librairie standard va-t-on utiliser si l'on veut chercher tous les fichiers se terminant par <code>.tmp</code> ?

( ) <code>os.path</code>
(x) <code>glob</code>
( ) <code>json</code>
( ) <code>sys</code>

[explanation]
Le module <code>glob</code> permet de facilement chercher des fichiers en utilisant les notations classique Unix * ou ?. Dans notre cas on utilisera <code>glob.glob('*.tmp')</code>.
[explanation]
