# -*- coding: utf-8 -*-
<hr/>
Strings (1)
=====

On reçoit en entrée une chaîne dont on sait qu'elle est de taille impaire, et on veut écrire dans la case du milieu un caractère "-", c'est-à-dire que par exemple : 

<pre>chaine = "a"  => chaine = "-"</pre>
<pre>chaine = "abc"  => chaine = "a-c"</pre>
<pre>chaine = "abcde"  => chaine = "ab-de"</pre>

Comment peut-on faire ?

[ ] <code>chaine [ len(chaine)/2 ] = "-"</code>
[ ] <code>chaine = chaine [:len(chaine)/2] + "-" + chaine [len(chaine)/2:]</code>
[x] <code>chaine = chaine [:len(chaine)/2] + "-" + chaine [len(chaine)/2+1:]</code>

[explanation]
Le premier choix n'est pas valide car le type chaîne n'est pas mutable

Le second choix n'est pas correct, car le résultat contient un caractère de trop

Le troisième choix est correct
[explanation]

<hr/>
Strings (2)
=====

À partir d'une chaîne, on veut calculer une chaîne dérivée où le caractère '-' est inséré entre les caractères de la chaîne originelle, c'est-à-dire que par exemple : 

<pre>chaine = ""  => resultat = ""</pre>
<pre>chaine = "a"  => resultat = "a"</pre>
<pre>chaine = "abcd"  => resultat = "a-b-c-d"</pre>

Comment peut-on faire ?

[x] <code>"-".join(chaine)</code>
[x] <code>"-".join(list(chaine))</code>

[explanation]
La première clause est correcte, c'est bien sûr le plus simple

La seconde est correcte également, et reste acceptable car elle convertit la chaîne en liste; si on n'est plus très sûr de savoir si "join" se comporte correctement avec une chaîne en argument, au moins comme ceci on est sûr de son coup.

[explanation]

<hr/>
Strings - formatage
=====

On veut écrire une fonction <code>affichage</code> qui met en forme un message à partir de 3 variables (<code>nom</code>, <code>age</code>, <code>no_secu</code>) pour obtenir, par exemple :

<pre>
>>> affichage("Dupont", 25, "1975787")
'Dupont, 25 ans, 1975787'</pre>
<pre>
>>> affichage("Durand", 17, None)
'Durand, 17 ans, pas de no de SS'</pre>

Remarquez bien que la fonction <code>affichage</code> doit <b>retourner le message</b> en valeur, et non pas réaliser l'impression elle-même. On envisage plusieurs solutions pour réaliser cela.

<h3>Solution 1</h3>
<pre>
def affichage(nom, age, no_secu):
    return "{nom}, {age} ans, {secu}".\
          format(nom=nom, age=age, 
                 secu = no_secu if no_secu else "pas de no de SS")</pre>

<h3>Solution 2</h3>
<pre>
def affichage(nom, age, no_secu):
    return "{}, {} ans, {}".\
          format(nom, age, no_secu if no_secu else "pas de no de SS")</pre>

<h3>Solution 3</h3>
<pre>
def affichage(nom, age, no_secu):
    return "%s, %s ans, %s".\
          format(nom, age, no_secu if no_secu else "pas de no de SS")</pre>

<h3>Solution 4</h3>
<pre>
def affichage(nom, age, no_secu):
    print nom + ", " + age + " ans, " +\
          (no_secu if no_secu else "pas de no de SS")</pre>

Quelle(s) solution(s) est(sont) correcte(s) ?

[x] Solution 1
[x] Solution 2
[ ] Solution 3
[ ] Solution 4

[explanation]
Les clauses 1, 2 sont correctes

La clause 3 est erronée, elle mélange les <code>%s</code> de l'opérateur <code>%</code> avec la méthode <code>format</code>

La clause 4 est erronée car elle fait <code>print</code> au lieu de <code>return</code>. De plus le code qui élabore le message ne fonctionne pas car on essaie de concaténer un string avec un entier. Enfin, cette méthode paraît moins lisible que les options 1 et 2.
[explanation]
