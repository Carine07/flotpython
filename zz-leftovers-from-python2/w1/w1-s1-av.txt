# -*- coding: utf-8 -*-
[ afficher le slide sur les 7 semaines ]
 
Bonjour, et bienvenue dans ce MOOC consacré au langage python.

Je suis Thierry Parmentelat, et avec Arnaud Legout, qui vous a
présenté la vidéo d'accroche, nous animerons ce MOOC pendant les 7
semaines qui viennent. 

[ afficher le slide sur les 4 sessions de la semaine 1 ]

Cette première semaine sera consacrée à une brève introduction, et à une
prise en mains, pour vous laisser le temps d'installer le logiciel
nécessaire sur votre propre machine, et de vous familiariser avec les
différents outils.


==================== partie 1

Je vais tout d'abord préciser un peu mieux le sujet du mooc.

Tout d'abord, comme vous le savez sans doute, python est actuellement
disponible dans deux versions, la version 2 et la version 3 qui sont
légèrement incompatibles.
Nous avons choisi de construire ce cours sur python2 et plus précisément en 2.7. 

Les raisons de ce choix sont simples
* d'une part et surtout la grande majorité du code existant dans la
sphère python, et qui constitue une des grandes forces du langage,
fonctionne toujours exclusivement en python2.
* d'autre part les concepts les nouveautés de python 3 sont bien
souvent rapportés dans python2, de sorte que les différences entre les
deux langages restent minimes; vous trouverez un complément là dessus
en semaine 7

---------- partie 1.2
[ remettre le plan du cours avec les 7 semaines ]

Par ailleurs, notre parti-pris a été de nous concentrer sur le coeur du
langage. À partir de la semaine 2, Arnaud vous présentera dans les vidéos,
les fondements du langage dans le détail.

Pour faire un rapide survol, nous commencerons par l'étude des
différents types de base; nous verrons ensuite les structures de
contrôle élémentaires ainsi que les fonctions, et les modules qui
permettent de rendre le code réutilisable et modulaire. Enfin nous
aborderons le système de classes, qui permet à chacun de définir
ses propres types de données, et les espaces de nommage.

Tout au long du cours nous insisterons sur les grands choix de
conception du langage, à savoir le fait que tout est objet, 
le typage dynamique, la liaison lexicale, et sur l'importance de
concepts propres à python comme les itérateurs.


Toutes ces notions -- sont la clé pour être capable de rapidement
comprendre et appréhender comment utiliser telle ou telle librairie.

Naturellement nous étudierons aussi quelques unes de ces librairies,
et notamment parmi ce qu'il est convenu d'appeler la librairie
standard, c'est à dire les outils qui font partie intégrante de la
distribution standard python; librairie standard est toujours installée 
avec python, c'est pour cette raison que nous insisterons là-dessus.

---------- partie 1.3  
 
Mais il n'est pas envisageable de tout présenter, même si l'on voulait
se limiter à la librairie standard, et donc a fortiori sur l'énorme base de code
disponible. Certains outils, comme django pour réaliser un serveur
web, ou encore numpy pour le calcul scientifique, pourraient
facilement faire l'objet d'un mooc à eux tout seuls.

Notre objectif est donc plutôt de vous fournir une très bonne base de
départ, un socle, pour que vous puissiez par vous même découvrir, choisir et
apprendre facilement telle ou telle librairie en fonction de
vos besoins.

==================== partie 2

Voici comment nous avons choisi d'organiser le matériel pédagogique du
MOOC. Chaque semaine contient quelques vidéos, 8 au maximum. 

Chaque vidéo se concentre sur un point précis, mais le format de la
vidéo ne se prête pas à l'exhaustivité; et c'est pourquoi vous
trouverez la plupart du temps un certain nombre de compléments, qui
reprennent et approfondissent le sujet de la vidéo.

Je voudrais insister sur la nécessité de suivre aussi ces
compléments, car dans la plupart des cas la vidéo seule peut se
révéler insuffisante.

---------- 2.2
Comme nous le verrons dans la 3eme vidéo de cette semaine, les
compléments sont rédigés avec ipython, sous forme de documents qu'on
appelle des notebooks, pardon pour l'anglicisme, ce ne sera pas le
dernier malheureusement dans ce cours et nous nous en excusons par
avance .. des notebooks donc qui sont des documents structurés avec du
texte et des fragments de code, que vous pourrez exécuter vous même,
et même éventuellement modifier. 

Le notebook nous a semblé être un support très adapté à l'apprentissage
du langage, car il vous permet d'expérimenter très simplement, et je
vous montrerai très prochainement comment les utiliser.

Vous constaterez aussi que les compléments sont classés - à titre
indicatif - en trois niveaux: basique, intermédiaire et avancé. Nous
savons que le temps est une ressource rare, nous espérons que ceci
pourra vous aider à composer votre propre cursus en fonction de vos
objectifs.

---------- partie 2.3

Enfin, nous proposerons naturellement un certain nombre de quiz et
d'exercices. La partie la plus substantielle des exercices seront
proposés sous forme de notebooks. Nous y reviendrons, mais vous aurez
avec ces exercices les moyens de faire une auto-évaluation en
vérifiant que votre code répond bien à la question.

Vous remarquerez d'ailleurs que le contenu du cours est allégé en
semaines 6 et 7 pour vous laisser davantage de temps pour les exercices.

Dans l'état actuel des choses nous ne sommes malheureusement pas en
mesure de délivrer un certificat à l'issue du mooc. Nous ne doutons
pas toutefois que tout ceci vous sera rapidement utile et profitable.

Pour conclure sur l'organisation du MOOC, je vous invite à utiliser
également le forum, de façon à échanger entre vous sur tous les sujets
qui peuvent vous poser problème. N'oubliez pas que vous n'êtes pas
seul, aussi n'hésitez pas à soumettre vos idées et suggestions à la
communauté des étudiants.

==============================

Un dernier mot sur la langue; le cours naturellement est en français
ainsi que tous les exercices; mais vous allez le voir très vite,
toutes les documentations en ligne que nous citons sont en
anglais. C'est aussi le cas pour quasiment la totalité du code
disponible en open source. L'anglais est donc nécessaire dans tous les
cas. Nous nous sommes efforcés de produire au maximum les supports de
cours en français, mais vous voudrez bien nous pardonner quelques
anglicismes

========== conclusion

Avant de nous retrouver dans la prochaine vidéo, il est nécessaire
d'installer python 2.7 sur votre machine, c'est le moment d'y penser
si vous ne l'avez pas encore fait; vous trouverez dans un premier
complément quelques indications à ce sujet. De cette façon vous serez
prêt pour la prochaine vidéo dans laquelle nous verrons comment
utiliser l'interpréteur python, et l'éditeur IDLE qui font tous deux
partie de la distribution standard.

À bientôt.

==============================
xxx j' ai finalement supprimé l'incise sur les identifiants courts
dans les vidéos - qui tombait comme un cheveu sur la soupe
j'en parlerai dans W1-S2 ce sera bcp mieux
