# -*- coding: utf-8 -*-
## FORMAT DU FICHIER
## Tout ce qui commence avec un ## est un commentaire
##
## le texte entre double crochets ouvrants et fermants
## est à afficher en surimpression pendant que je parle et à 
## synchroniser avec le texte entre crochet 

## TITRE : Modules et espaces de nommage

## Résumé de la semaine()

TODO

## Sujet de la vidéo ()

Nous avons introduit rapidement la notion de modules
la semaine dernière en présentant le côté utilisateur, 
c'est-à-dire comment utiliser un module comme une boite à
outils. Cependant les modules sont bien plus que de simples
boites à outils, ce sont de véritables objets qui permettent
l'isolation des variables par ce que l'on appelle des espaces
de nommages. 

Nous allons voir dans cette vidéo la subtilité des espaces 
de nommage. 

>>>>>>>>>> INCLUDE W5-S1-AV-slide1.pptx (5 minutes) <<<<<<<<<<

## Conclusion ()

C'est important de comprendre que les espaces de nommage isolent 
uniquement les variables, mais pas les objets. Il est possible 
d'avoir des références partagées par différents espaces de nommage 
vers le même objet. Si l'objet est mutable, il peut alors être modifié
depuis un espace de nommage et sera vu modifié par tous les autres. 

En résumé, les espaces de nommage permettent une parfaite isolation
des variables. Par contre, on peut accéder à toutes les variables 
de l'espace de nommage d'un autre module en utilisant le nom du
module point le nom de la variable, du moment que le module a été 
importé avant. Cette isolation des espaces de nommage est une des 
grandes forces de Python puisque l'accès à une variable en dehors de son
espace de nommage doit toujours être fait explicitement. 


