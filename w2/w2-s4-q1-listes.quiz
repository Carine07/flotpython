<hr/>
Listes (1)
=====

On a 
<pre>liste = [0, 1, 2, 3]</pre>
On veut <b>modifier</b> l'objet <code>liste</code> pour que sa valeur devienne <code>[0, 1, 4, 2, 3]</code>

Que faut-il faire ? (plusieurs réponses possibles)

[ ] <code>liste[2] = 4</code>
[ ] <code>liste[2] = [4]</code>
[x] <code>liste.insert(2, 4)</code>
[ ] <code>liste[2:3] = [4]</code>
[x] <code>liste[2:2] = [4]</code>

[explanation]
La première formule remplace <code>2</code> par <code>4</code>, <code>liste</code> conserve 4 éléments et devient <code>&#91;0, 1, 4, 3&#93;</code>.
La seconde, idem mais <code>liste</code> devient <code>&#91;0, 1, &#91;4&#93;, 3&#93;</code>.
La troisième est correcte.
La quatrième est équivalente à la première, elle remplace <code>2</code> par <code>4</code>.
La cinquième est correcte également.
[explanation]


<hr/>
Listes (2)
=====

À nouveau on a 
<pre>liste = [0, 1, 2, 3]</pre>

On veut <em>extraire</em> et retourner le premier élément <code>0</code>, tout en le retirant de la liste.
Plus précisément on veut affecter à la variable <code>suivant</code> la valeur <code>0</code> de telle sorte qu'après l'exécution, <code>liste</code> ne contienne plus que <code>[1, 2, 3]</code>.

Que faut-il faire ? (plusieurs réponses possibles)

[ ] <code>suivant = liste[0]</code>
[x] <code>suivant = liste.pop(0)</code>
[ ] <code>del liste[0]</code>
[x] <code>suivant = liste[0]; del liste[0]</code>
[ ] <code>suivant = del liste[0]</code>

[explanation]
La première formule retourne bien <code>0</code> mais ne modifie pas <code>liste</code>.
La seconde est correcte.
La troisième enlève bien <code>0</code> de <code>liste</code> mais ne retourne rien.
La quatrième version fonctionne - quoiqu'assez peu pythonique.
La dernière formule est syntaxiquement incorrecte ; <code>del</code> est une instruction et ne peut pas être utilisée comme résultat d'une affectation.
[explanation]


<hr/>
Listes (3)
=====

On a cette fois
<pre>liste = [1, 0, 3, 2]</pre>

On veut trier la liste en ordre décroissant et <b>en place</b>, c'est-à-dire <b>sans dupliquer</b> la liste ni ses éléments.

Comment peut-on faire ? (plusieurs réponses possibles)

[x] <code>liste.sort(reverse=True)</code>
[ ] <code>liste.sort()</code>
[ ] <code>sorted(liste, reverse=True)</code>
[x] <code>liste.sort(); liste.reverse()</code>

[explanation]
Il faut bien préciser <code>reverse=True</code> pour obtenir un tri <em>décroissant</em>.

On ne veut pas dupliquer la liste initiale, c'est pourquoi ce n'est pas une bonne idée d'utiliser <code>sorted</code>.

La dernière formule fonctionne très bien également.
[explanation]
